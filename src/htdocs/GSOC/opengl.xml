<?xml version="1.0"?>
<!DOCTYPE xml
[
  <!ENTITY % site-entities SYSTEM "../entities.site">
  %site-entities;
]>

<?xml-stylesheet href="../page.xsl" type="text/xsl"?>
<page>
<head>
  <title>GStreamer Google Summer of Code OpenGL ideas</title>
</head>
<body>
<h1>GStreamer Google Summer of Code OpenGL ideas</h1>

<p>
<quot>The following ideas aim to improve GStreamer OpenGL library and plugins</quot>
</p>

<p>
<h1>Interested Mentors</h1>
<ul>
  <li>Julien Isorce</li>
  <li>Matthew Waters</li>
</ul>
</p>

<h2>Project idea 1: OpenGL audio visualizer</h2>

<p>
Port libvisual_gl gstgl elements from 0.10 to gst-1.0. Make it work with GLES2.
This would enable an efficient gstreamer audio visualizer on embedded platforms.
This project is also open to use another opensource audio visualizer API that support GL.
</p>

<p>
More details <a href="https://bugzilla.gnome.org/show_bug.cgi?id=723681">here</a>
</p>

<h2>Project idea 2: VDPAU interoperability with GstGL</h2>

<p>
Use "GL_NV_vdpau_interop" OpenGL extension to make vdpauvideodec ! glimagesink avoid downloading/uploading the frame in between.
Gstreamer vdpau elements are already working. We need to make them compatible with GstGL.
This will enable a zero-copy path from the CPU point of view.
</p>

<p>
More details <a href="https://bugzilla.gnome.org/show_bug.cgi?id=744698">here</a>
</p>

<h2>Project idea 3: Add suport for GstVideoOverlayCompositionMeta and apply it to new glcontrol and subtitle elementa</h2>
<p>
glcontrol: draws controls (play/pause button, seek bar, volume, quality) into a separate gltexture and attach it to the input buffer's GstVideoOverlayCompositionMeta.
gltextoverlay: use an external GL Font API to build a separate gltexture and attach it to the input buffer's GstVideoOverlayCompositionMeta.
Then a downstream element could call gst_video_overlay_composition_blend to show up the controls and subtitles.
</p>

<code>
<p>
gst-launch-1.0 playbin uri=foo video-sink="glcontrol ! glimagesink"
</p>
<p>
gst-launch-1.0 filesrc location=text.srt ! subparse ! text/x-raw ! gltextoverlay.text_sink ! glimagesink
</p>
</code>

<p>
More details for glcontrol <a href="https://bugzilla.gnome.org/show_bug.cgi?id=723680">here</a>
</p>

<p>
More details for gltextoverlay <a href="https://bugzilla.gnome.org/show_bug.cgi?id=723761">here</a>
</p>

<h2>Project idea 4: make other sinks compatible with gstgl</h2>

<p>
gstgl sink: glimagesink
non-gstgl: Qt (qtglvideosink), Wayland (waylandsink), clutter (cluttersink/coglsink), cairo (cairosink).
</p>

<p>
Useful to benefit GstGL capabilities in these other video sinks. (Ex: zero-copy with OpenMAX decoder)
The GstGL API is ready but some corner cases may be encountered. The student will need to improve API according.
</p>

<code>
<p>
gst-launch-1.0 src ! gleffects ! qtglvideosink
</p>
<p>
gst-launch-1.0 src ! omxvideodec ! qtglvideosink
</p>
</code>

<p>
More details <a href="https://bugzilla.gnome.org/show_bug.cgi?id=723674">here</a>
</p>

<h2>Project idea 5: add supports for glCompressedTexImage2D</h2>

<p>
More details <a href="https://bugzilla.gnome.org/show_bug.cgi?id=723781">here</a>
</p>


<h2>Project idea 6: new KTX texture parser</h2>

<code>
gst-launch-1.0 filesrc location=texture.ktx ! glktxparse ! glimagesink
</code>

<p>
<a href="http://www.khronos.org/opengles/sdk/tools/KTX/">KTX format</a>
</p>

<p>
More details <a href="https://bugzilla.gnome.org/show_bug.cgi?id=723768">here</a>
</p>


<h2>Project idea 7: make gst-gl compatible with DirectX</h2>
<p>
gl element should be able to handle dx surface as input.
</p>

<code>
<p>
gst-launch-1.0 src ! dxvadec ! glimagesink
</p>
<p>
gst-launch-1.0 videotestsrc ! gleffects ! d3dvideosink
</p>
</code>

<p>
Also investigate about accelerated video decoding on Windows (DXVA).
</p>

<p>
More details <a href="https://bugzilla.gnome.org/show_bug.cgi?id=723772">here</a>
</p>

<p>
<h1>Interested Mentors:</h1>
<ul>
  <li>Julien Isorce</li>
</ul>
</p>

<p>
<h1>Student Notes:</h1>
</p>

<p>
<h1>Related links:</h1>
<ul>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=723681">https://bugzilla.gnome.org/show_bug.cgi?id=723681</a></li>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=744698">https://bugzilla.gnome.org/show_bug.cgi?id=744698</a></li>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=723680">https://bugzilla.gnome.org/show_bug.cgi?id=723680</a></li>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=723761">https://bugzilla.gnome.org/show_bug.cgi?id=723761</a></li>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=723674">https://bugzilla.gnome.org/show_bug.cgi?id=723674</a></li>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=723781">https://bugzilla.gnome.org/show_bug.cgi?id=723781</a></li>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=723768">https://bugzilla.gnome.org/show_bug.cgi?id=723768</a></li>
  <li><a href="https://bugzilla.gnome.org/show_bug.cgi?id=723772">https://bugzilla.gnome.org/show_bug.cgi?id=723772</a></li>
</ul>
</p>

</body>
</page>
