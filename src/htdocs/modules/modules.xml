<?xml version="1.0"?>
<!DOCTYPE xml
[
  <!ENTITY % gst-entities SYSTEM "../entities.gst">
  %gst-entities;
  <!ENTITY % site-entities SYSTEM "../entities.site">
  %site-entities;
]>

<modules>

  <module>
    <id>gstreamer</id>
    <title>GStreamer</title>
    <blurb>core library and elements</blurb>
    <description>
GStreamer is the core library.  It contains the headers, core library files,
and core elements.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gst-version-stable;</stable>
      <devel>&gst-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gst-plugins-base</id>
    <title>GStreamer Base Plug-ins</title>
    <blurb>an essential exemplary set of elements</blurb>
    <description>
GStreamer Base Plug-ins is a well-groomed and well-maintained collection of
GStreamer plug-ins and elements, spanning the range of possible types of
elements one would want to write for GStreamer.  It also contains helper
libraries and base classes useful for writing elements.
A wide range of video and audio decoders, encoders, and filters are included.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gst-plugins-base-version-stable;</stable>
      <devel>&gst-plugins-base-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gst-plugins-good</id>
    <title>GStreamer Good Plug-ins</title>
    <blurb>a set of good-quality plug-ins under our preferred license, LGPL</blurb>
    <description>
GStreamer Good Plug-ins is a set of plug-ins that we consider to have good
quality code, correct functionality, our preferred license (LGPL for the
plug-in code, LGPL or LGPL-compatible for the supporting library).
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gst-plugins-good-version-stable;</stable>
      <devel>&gst-plugins-good-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gst-plugins-ugly</id>
    <title>GStreamer Ugly Plug-ins</title>
    <blurb>a set of good-quality plug-ins that might pose distribution problems</blurb>
    <description>
GStreamer Ugly Plug-ins is a set of plug-ins that have good quality and correct
functionality, but distributing them might pose problems.  The license on
either the plug-ins or the supporting libraries might not be how we'd like. The
code might be widely known to present patent problems.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gst-plugins-ugly-version-stable;</stable>
      <devel>&gst-plugins-ugly-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gst-plugins-bad</id>
    <title>GStreamer Bad Plug-ins</title>
    <blurb>a set of plug-ins that need more quality</blurb>
    <description>
GStreamer Bad Plug-ins is a set of plug-ins that aren't up to par compared to
the rest.  They might be close to being good quality, but they're missing
something - be it a good code review, some documentation, a set of tests, a
real live maintainer, or some actual wide use.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gst-plugins-bad-version-stable;</stable>
      <devel>&gst-plugins-bad-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gst-plugins-gl</id>
    <title>GStreamer OpenGL Plug-ins</title>
    <blurb>plug-in and helper libraries for OpenGL integration</blurb>
    <description>
        The GStreamer OpenGL module provides helper libraries, base classes
        and elements for integrating with OpenGL and using it to perform video
        display and processing.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gst-plugins-gl-version-stable;</stable>
      <devel>&gst-plugins-gl-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gst-ffmpeg</id>
    <title>GStreamer FFmpeg plug-in</title>
    <blurb>FFmpeg-based plug-in</blurb>
    <description>
GStreamer FFmpeg plug-in contains one plugin with a set of elements using
the FFmpeg library code.  It contains most popular decoders as well as
very fast colorspace conversion elements.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gst-ffmpeg-version-stable;</stable>
      <devel>&gst-ffmpeg-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gnonlin</id>
    <title>GNonLin plug-in</title>
    <blurb>Non-linear editing elements</blurb>
    <description>
GNonLin contains a set of plug-ins for GStreamer to ease the
creation of multimedia editors, or any other application where a
timeline-oriented use of GStreamer makes sense.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>&gnonlin-version-stable;</stable>
      <devel>git master</devel>
    </versions>
  </module>

  <module>
    <id>gst-python</id>
    <blurb>python bindings</blurb>
    <title>GStreamer Python Bindings</title>
    <description>
GStreamer python bindings. You can find API docs for the Python bindings at <a href="http://pygstdocs.berlios.de/">this website</a>.
    </description>
    <maintainer>Edward Hervey</maintainer>
    <versions>
      <stable>&gst-python-version-stable;</stable>
      <devel>&gst-python-version-devel;</devel>
    </versions>
  </module>

  <module>
    <id>gst-rtsp-server</id>
    <blurb>RTSP server</blurb>
    <title>GStreamer RTSP Server</title>
    <description>
RTSP server based on GStreamer (<a href="http://people.freedesktop.org/~wtay/">homepage</a>)
    </description>
    <maintainer>Wim Taymans</maintainer>
    <versions>
      <stable>0.10.4</stable>
      <devel>git master</devel>
    </versions>
  </module>

  <module>
    <id>gst-plugins</id>
    <title>GStreamer Plug-ins</title>
    <blurb>additional elements</blurb>
    <description>
GStreamer Plug-ins contains the media-specific plugins and elements.
A wide range of video and audio decoders, encoders, and filters are included.
    </description>
    <maintainer>GStreamer Team</maintainer>
    <versions>
      <stable>0.8.12</stable>
      <devel>N/A</devel>
    </versions>
  </module>

  <module>
    <id>gst-editor</id>
    <blurb>graphical pipeline editor</blurb>
    <title>GStreamer Editor</title>
    <description>
<table>
<tr>
  <td colspan="2">
    <p>
The GStreamer Pipeline Editor (<tt>gst-editor</tt>) is a graphical pipeline
contruction and manipulation tool. Using the Gnome Canvas as the foundation, it
allows you to draw media pipelines very quickly. It's not anywhere near
complete yet, but it still lets you do some amazing things.
    </p>
  </td>
</tr>

<tr>
  <td>

<p>The example at the right shows a complex pipeline set up for playback
of an MP3 in an <A HREF="http://www.ambisonic.net">Ambisonics</A> surround setup.  
From left to right you have a filesrc to read from disk, mad to decode the mp3, 
and ladspa_<A href="http://home.onet.co.uk/~jzracc/freeverb.htm">freeverb3</A>
to apply some world-class reverb effects.  At the bottom you have
ladspa_encode_bformat, which has three arguments: angle, elevation, and
distance.  This encodes the audio as 4 channels of surround sound.  The
ladspa_bf2cube element converts this surround data into output channels
appropriate for a cube of speakers.  Finally, the audio is routed to an
8-channel ALSA audio sink.</p>

<p>The pipeline shown probably works, although <tt>gst-editor</tt>'s author does
not have a sound card that can support 8 channels (hint, hint :-).</p>
  </td>

  <td>
    <a href="&site;/data/images/gst-editor/gst-editor-ambisonics.png">
      <img align="right" src="&site;/data/images/gst-editor/gst-editor-ambisonics-small.png" border="0" /></a>
  </td>
</tr>

<tr>
  <td>

<p>The second example on the right shows another complex pipeline that was
loaded up from <tt>gst-launch</tt> syntax. Initially, the audio and video pads
on the mpeg demuxer were not present. The pipeline was set to PLAYING, and the
<tt>gstparse</tt> code caught the presence of these pads and connected to the
audio and video rendering pipelines. As this dynamic connection was made, the
editor knew to graphically add the pads to the demuxer and connect them to the
proper elements. This is interesting because <tt>gstparse</tt> knows nothing
about <tt>gst-editor</tt>!
</p>
  </td>
  <td>
<a href="&site;/data/images/gst-editor/gst-editor-0.4.1.png">
  <img align="right" src="&site;/data/images/gst-editor/gst-editor-0.4.1-small.png" border="0" /></a>
  </td>

</tr>

<tr>
  <td colspan="2">
<H1>Features</H1>

<p><tt>gst-editor</tt>, even though it's far from complete, already has a
large number of major features:</p>

<ul>
<li>Built as a library, so you can trivially embed the editor into your
own application.</li>
<li>Reads and write standard XML descriptions of pipelines, which you can
load into your application just as with libglade and GUIs</li>
<li>Capable of not only building but <b>running</b> most pipelines right
in the editor</li>
<li>A Glade-like interface gives access to the element's arguments, as
shown in the shot at right of all the options to the <A
HREF="http://plug-in.org.uk/">LADSPA</A> gong model reverb filter.</li>
<li>Threadsafe, so as to safely control threaded pipelines</li>
<li>Supports rapid prototyping with <tt>gst-launch</tt> syntax</li>
<li>Supports cut, copy, and paste in the standard GStreamer XML format</li>
<li>Has iterative, graphical bin sorting functionality (click the Sort
        button)</li>
<li>Integrated with GStreamer's debugging subsystem</li>
<li>Supports all GStreamer pipeline elements: request pads, ghost pads, dynamic
        connections, threads, ...</li>
<li>Built on the solid rock of Gnome 2 and GObject -- code is very clean</li>
<li>Integrated with the Gnome 2 help system</li>
<li>Context menus offer context-specific "What's this?"-style help</li>
</ul>
  </td>
</tr>
</table>

    </description>
    <maintainer>Jan Schmidt</maintainer>
    <screenshot width="765" height="454" alt="GStreamer Pipeline Editor">
      <src>gst-editor/gst-editor-0.4.1.png</src>
   </screenshot>
    <versions>
      <stable>0.8.0</stable>
      <devel>N/A</devel>
    </versions>
  </module>

  <module>
    <id>gst-recorder</id>
    <blurb>audio/video recorder</blurb>
    <title>GStreamer Recorder</title>
    <description>
GStreamer Recorder is an application for recording audio and/or video.
    </description>
    <maintainer>Ronald Bultje</maintainer>
    <versions>
      <stable>N/A</stable>
      <devel>N/A</devel>
    </versions>
  </module>

  <module>
    <id>gst-monkeysaudio</id>
    <blurb>Monkey's Audio plug-in</blurb>
    <title>GStreamer Monkey's Audio Plug-in</title>
    <description>
GStreamer has a plug-in for the Monkey's Audio format (replaced by gst-ffmpeg).
    </description>
    <maintainer>Jérémy Simon</maintainer>
    <versions>
      <stable>0.8.0</stable>
      <devel>N/A</devel>
    </versions>
  </module>


</modules>
