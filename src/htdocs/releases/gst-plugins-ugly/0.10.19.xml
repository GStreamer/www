<?xml version="1.0"?>
<?xml-stylesheet href="../releases.xsl" type="text/xsl"?>
<release>
  <module>gst-plugins-ugly</module>
  <module-fancy>GStreamer Ugly Plug-ins</module-fancy>
  <name>Stronger</name>
  <version>0.10.19</version>

  <intro>
<p>
The GStreamer team is proud to announce a new release
in the 0.10.x stable series of the
GStreamer Ugly Plug-ins.
</p>
<p>
The 0.10.x series is a stable series targeted at end users.
It is not API or ABI compatible with the stable 0.8.x series.
It is, however, parallel installable with the 0.8.x series.
</p>

<p>
<i>"When you have to shoot, shoot.  Don't talk."</i>
</p>
<p>
There are times when the world needs a color between black and white.
Quality code to match the good's, but two-timing, backstabbing and ready to
sell your freedom down the river.  These plug-ins might have a patent noose
around their neck, or a lock-up license, or any other problem that makes you
think twice about shipping them.
</p>
<p>
We don't call them ugly because we like them less.  Does a mother love her
son less because he's not as pretty as the other ones ? No  - she commends
him on his great personality.  These plug-ins are the life of the party.
And we'll still step in and set them straight if you report any unacceptable
behaviour - because there are two kinds of people in the world, my friend:
those with a rope around their neck and the people who do the cutting.
</p>
<p>
This module contains a set of plug-ins that have good quality and correct
functionality, but distributing them might pose problems.  The license
on either the plug-ins or the supporting libraries might not be how we'd
like. The code might be widely known to present patent problems.
Distributors should check if they want/can ship these plug-ins.
</p>
<p>
Other modules containing plug-ins are:

<dl>
<dt>gst-plugins-base</dt>
<dd>contains a basic set of well-supported plug-ins</dd>
<dt>gst-plugins-good</dt>
<dd>contains a set of well-supported plug-ins under our preferred license</dd>
<dt>gst-plugins-bad</dt>
<dd>contains a set of less supported plug-ins that haven't passed the
    rigorous quality testing we expect</dd>
</dl>

</p>
  </intro>
  <features>
    <feature>a52dec: don't claim to support upstream renegotiation</feature>
    <feature>dvddemux: tweak subtitle stream setup based on dvd language codes event</feature>
    <feature>dvdreadsrc: fix off by one in cell calculation for the last chapter</feature>
    <feature>dvdreadsrc: fix sector search for packed titles; fix sector seeking</feature>
    <feature>dvdreadsrc: map subtitle language tag to stream indicated in PGC data</feature>
    <feature>dvdreadsrc: take into account first sector of the current title</feature>
    <feature>lame, lamemp3enc: ensure parsed output (most muxers need framed mp3 as input)</feature>
    <feature>lame, lamemp3enc: post CODEC and BITRATE tags</feature>
    <feature>mad: remove id3tag dependency used by in practice unreachable legacy code</feature>
    <feature>mpeg2dec: don't treat non-fatal errors as fatal and fix spurious failure to decode some files</feature>
    <feature>mpeg2dec: post QoS messages when dropping a frame due to QoS</feature>
    <feature>rtpasfdepay: avoid re-sending header; fix fragmented packet handling and packet padding</feature>
    <feature>twolame: improve output framing and timestamping</feature>
    <feature>x264enc: allow renegotiation but prefer current caps</feature>
    <feature>x264enc: negotiate profile, level and output stream-format from downstream caps where appropriate</feature>
  </features>

  <applications>
  </applications>

      <contributors>
	<person>Brian Gitonga Marete</person>
	<person>David Schleef</person>
	<person>Edward Hervey</person>
	<person>Julien Isorce</person>
	<person>Mark Nauwelaerts</person>
	<person>Olivier Crête</person>
	<person>Sebastian Dröge</person>
	<person>Stefan Kost</person>
	<person>Stefan Sauer</person>
	<person>Thiago Santos</person>
	<person>Tim-Philipp Müller</person>
	<person>Vincent Penquerc'h</person>
	<person>Руслан Ижбулатов</person>
  </contributors>

<!--
  <api>
    <additions>
    </additions>
    <deprecations>
    </deprecations>
  </api>
-->

  

  

  <bugs>
    <bug>
      <id>644233</id>
      <summary>Set the H.264 level from the caps for encoding</summary>
    </bug>
    <bug>
      <id>391543</id>
      <summary>lame should add a tag with the chosen bitrate</summary>
    </bug>
    <bug>
      <id>429476</id>
      <summary>[mpeg2dec] can't play auge.mpg</summary>
    </bug>
    <bug>
      <id>653473</id>
      <summary>x264enc: &quot; subme &quot; property value can go up to 10</summary>
    </bug>
    <bug>
      <id>655223</id>
      <summary>[x264enc] properly handle stream-format from caps</summary>
    </bug>
    <bug>
      <id>658297</id>
      <summary>rmdemux: tags get lost when transcoding</summary>
    </bug>
    <bug>
      <id>659252</id>
      <summary>dvdreadsrc: various fixes for titles not starting on a new file</summary>
    </bug>
    <bug>
      <id>660562</id>
      <summary>mpeg2dec: post QoS messages when dropping a frame due to QoS</summary>
    </bug>
    <bug>
      <id>662964</id>
      <summary>asfdemux memleak</summary>
    </bug>
    <bug>
      <id>664175</id>
      <summary>x264enc ! avimux results in not-negotiated flow error</summary>
    </bug>
    <bug>
      <id>665101</id>
      <summary>Wrong format string in gst_dvd_read_src_do_seek</summary>
    </bug>
  </bugs>
</release>
