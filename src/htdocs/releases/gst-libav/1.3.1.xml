<?xml version="1.0"?>
<?xml-stylesheet href="../releases.xsl" type="text/xsl"?>
<release>
  <module>gst-libav</module>
  <module-fancy>GStreamer libav Plugins</module-fancy>
  <name></name>
  <version>1.3.1</version>

  <intro>

<p>
The GStreamer team is pleased to announce the first release of the unstable
1.3 release series. The 1.3 release series is adding new features on top of
the 1.0 and 1.2 series and is part of the API and ABI-stable 1.x release
series of the GStreamer multimedia framework. The unstable 1.3 release series
will lead to the stable 1.4 release series in the next weeks, and newly added
API can still change until that point.
</p>

<p>
Binaries for Android, iOS, Mac OS X and Windows will be provided separately
during the unstable 1.3 release series.
</p>

<p>
The versioning scheme that is used in general is that 1.x.y is API and
ABI backwards compatible with previous 1.x.y releases. If x is an even
number it is a stable release series and all releases in this series
will only contain important bugfixes, e.g. the 1.0 series with 1.0.7. If
x is odd it is a development release series that will lead to the next
stable release series 1.x+1 and contains new features and bigger
changes. During the development release series, new API can still
change.
</p>

<p>
This module contains plugins based on the libav project, including codecs.
</p>

<p>
Other modules containing plugins are:

<dl>
<dt>gst-plugins-base</dt>
<dd>contains a basic set of well-supported plugins</dd>
<dt>gst-plugins-good</dt>
<dd>contains a set of well-supported plugins under our preferred license</dd>
<dt>gst-plugins-ugly</dt>
<dd>contains a set of well-supported plugins, but might pose problems for
    distributors</dd>
<dt>gst-plugins-bad</dt>
<dd>contains a set of less supported plugins that haven't passed the
    rigorous quality testing we expect, or are still missing documentation
    and/or unit tests</dd>
</dl>

</p>
  </intro>

<!--
  <applications>
  </applications>
-->

    <contributors>
	<person>Aleix Conchillo Flaqué</person>
	<person>Christian Fredrik Kalager Schaller</person>
	<person>Dmitry Melnichenko</person>
	<person>Edward Hervey</person>
	<person>Greg Rutz</person>
	<person>Mark Nauwelaerts</person>
	<person>Matthieu Bouron</person>
	<person>Sebastian Dröge</person>
	<person>Sjoerd Simons</person>
	<person>Stefan Sauer</person>
	<person>Stian Selnes</person>
	<person>Thiago Santos</person>
	<person>Thijs Vermeir</person>
	<person>Tim 'mithro' Ansell</person>
	<person>Tim-Philipp Müller</person>
	<person>Todd Agulnick</person>
	<person>Vincent Penquerc'h</person>
	<person>Wim Taymans</person>
  </contributors>

<p>In addition to the above contributors, we would like to extend our
thanks to the libav developers without which these plugins would have
no reason to exist.</p>

<!--
  <api>
    <additions>
    </additions>
    <deprecations>
    </deprecations>
  </api>
-->

  

  <bugs>
    <bug>
      <id>689936</id>
      <summary>avdec: leak when skipping frames while Video Decoding</summary>
    </bug>
    <bug>
      <id>696770</id>
      <summary>avdec_h264: Memory leak when processing h.264 field pictures</summary>
    </bug>
    <bug>
      <id>719923</id>
      <summary>Port to libav 10 API</summary>
    </bug>
    <bug>
      <id>722290</id>
      <summary>avviddec: mark buffers as corrupted if libav tells us so</summary>
    </bug>
    <bug>
      <id>722453</id>
      <summary>avviddec: add output-corrupt property</summary>
    </bug>
    <bug>
      <id>722598</id>
      <summary>gas-preprocessor: libav 10alpha2 fails to build on iOS: libavcodec/arm/vc1dsp_neon.S:2810:14: error: invalid operand</summary>
    </bug>
    <bug>
      <id>722935</id>
      <summary>avdemux: Don't go into pull mode when the sequential scheduling flag is set</summary>
    </bug>
    <bug>
      <id>724536</id>
      <summary>Infinite loop while encoding audio to aac</summary>
    </bug>
    <bug>
      <id>724823</id>
      <summary>hevc: rename plugin to avdec_h265 for consistency</summary>
    </bug>
    <bug>
      <id>726814</id>
      <summary>avvidenc: Fix leak of AVBufferRef</summary>
    </bug>
    <bug>
      <id>727673</id>
      <summary>avdec_aic sink missing caps</summary>
    </bug>
  </bugs>

</release>
