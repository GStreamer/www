<?xml version="1.0"?>
<?xml-stylesheet href="../releases.xsl" type="text/xsl"?>
<release>
  <module>gst-plugins-good</module>
  <module-fancy>GStreamer Good Plugins</module-fancy>
  <name></name>
  <version>1.3.2</version>

  <intro>

<p>
The GStreamer team is pleased to announce the second release of the unstable
1.3 release series. The 1.3 release series is adding new features on top of
the 1.0 and 1.2 series and is part of the API and ABI-stable 1.x release
series of the GStreamer multimedia framework. The unstable 1.3 release series
will lead to the stable 1.4 release series in the next weeks, and newly added
API can still change until that point.
</p>

<p>
Binaries for Android, iOS, Mac OS X and Windows will be provided separately
during the unstable 1.3 release series.
</p>

<p>
The versioning scheme that is used in general is that 1.x.y is API and
ABI backwards compatible with previous 1.x.y releases. If x is an even
number it is a stable release series and all releases in this series
will only contain important bugfixes, e.g. the 1.0 series with 1.0.7. If
x is odd it is a development release series that will lead to the next
stable release series 1.x+1 and contains new features and bigger
changes. During the development release series, new API can still
change.
</p>

<p>
<i>"Such ingratitude.  After all the times I've saved your life."</i>
</p>
<p>
A collection of plugins you'd want to have right next to you on the
battlefield.  Shooting sharp and making no mistakes, these plugins have it
all: good looks, good code, and good licensing.  Documented and dressed up
in tests.  If you're looking for a role model to base your own plugin on,
here it is.
</p>
<p>
If you find a plot hole or a badly lip-synced line of code in them,
let us know - it is a matter of honour for us to ensure Blondie doesn't look
like he's been walking 100 miles through the desert without water.
</p>
<p>
This module contains a set of plugins that we consider to have good quality
  code, correct functionality, our preferred license (LGPL for the plugin
  code, LGPL or LGPL-compatible for the supporting library).
We believe distributors can safely ship these plugins.
People writing elements should base their code on these elements.
</p>
<p>
Other modules containing plugins are:

<dl>
<dt>gst-plugins-base</dt>
<dd>contains a basic set of well-supported plugins</dd>
<dt>gst-plugins-ugly</dt>
<dd>contains a set of well-supported plugins, but might pose problems for
    distributors</dd>
<dt>gst-plugins-bad</dt>
<dd>contains a set of less supported plugins that haven't passed the
    rigorous quality testing we expect, or are still missing documentation
    and/or unit tests</dd>
<dt>gst-libav</dt>
<dd>contains a set of codecs plugins based on libav (formerly gst-ffmpeg)</dd>
</dl>

</p>
  </intro>

<!--
  <applications>
  </applications>
-->

    <contributors>
	<person>Adrien SCH</person>
	<person>Aleix Conchillo Flaqué</person>
	<person>Benjamin Gaignard</person>
	<person>Edward Hervey</person>
	<person>Eric Trousset</person>
	<person>George Kiagiadakis</person>
	<person>Guillaume Desmottes</person>
	<person>Jason Litzinger</person>
	<person>Mark Nauwelaerts</person>
	<person>Nicolas Dufresne</person>
	<person>Olivier Crête</person>
	<person>Sebastian Dröge</person>
	<person>Tim-Philipp Müller</person>
	<person>Vincent Penquerc'h</person>
	<person>Víctor Manuel Jáquez Leal</person>
	<person>Wim Taymans</person>
	<person>Руслан Ижбулатов</person>
  </contributors>

<!--
  <api>
    <additions>
    </additions>
    <deprecations>
    </deprecations>
  </api>
-->

  

  <bugs>
    <bug>
      <id>583890</id>
      <summary>v4l2: Implement V4L2_MEMORY_USERPTR support</summary>
    </bug>
    <bug>
      <id>728501</id>
      <summary>rtpaux/rtprtx: Unit tests are racy and take very long sometimes</summary>
    </bug>
    <bug>
      <id>663944</id>
      <summary>souphttpsrc: leaking file descriptors + memory when destroyed while connecting</summary>
    </bug>
    <bug>
      <id>707321</id>
      <summary>flvdemux: complains too much when failed to send buffers</summary>
    </bug>
    <bug>
      <id>720440</id>
      <summary>rtpsession: internal sources are never removed</summary>
    </bug>
    <bug>
      <id>725410</id>
      <summary>v4l2videodec: Probe fails if first device does not start with 0</summary>
    </bug>
    <bug>
      <id>725415</id>
      <summary>v4l2videodec: Check caps are subset of encode or raw when probing devices</summary>
    </bug>
    <bug>
      <id>727925</id>
      <summary>v4l2: Share device enumeration</summary>
    </bug>
    <bug>
      <id>729247</id>
      <summary>rtp/README: update to work with gst 1.0</summary>
    </bug>
    <bug>
      <id>729524</id>
      <summary>rtpjitterbuffer: if retransmissions enabled, a gap larger than the latency can result in a stuck jitterbuffer</summary>
    </bug>
    <bug>
      <id>729553</id>
      <summary>qtdemux: tries to reply to a byte position query with a time position</summary>
    </bug>
    <bug>
      <id>729591</id>
      <summary>v4l2videodec: Remove meaningless properties</summary>
    </bug>
    <bug>
      <id>730078</id>
      <summary>rtpjitterbuffer: wrong packet insertion if events present in the jitter queue</summary>
    </bug>
    <bug>
      <id>730146</id>
      <summary>rtpbin: update rtp encoder/decoder documentation</summary>
    </bug>
    <bug>
      <id>730200</id>
      <summary>v4l2videodec: v4l2bufferpool must be updated according to driver requirement</summary>
    </bug>
    <bug>
      <id>730207</id>
      <summary>v4l2: Seeking with M2M devices</summary>
    </bug>
    <bug>
      <id>730212</id>
      <summary>rtspsrc: use a random ssrc for the internal session</summary>
    </bug>
    <bug>
      <id>730217</id>
      <summary>rtpsession: do not mark internal senders as expired</summary>
    </bug>
    <bug>
      <id>724630</id>
      <summary>v4l2videodec: alignment support</summary>
    </bug>
  </bugs>

</release>
