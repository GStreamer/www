<?xml version="1.0"?>
<?xml-stylesheet href="../releases.xsl" type="text/xsl"?>
<release>
  <module>gst-plugins-good</module>
  <module-fancy>GStreamer Good Plugins</module-fancy>
  <name></name>
  <version>1.3.3</version>

  <intro>

<p>
The GStreamer team is pleased to announce the third release of the unstable
1.3 release series. The 1.3 release series is adding new features on top of
the 1.0 and 1.2 series and is part of the API and ABI-stable 1.x release
series of the GStreamer multimedia framework. The unstable 1.3 release series
will lead to the stable 1.4 release series in the next weeks, and newly added
API can still change until that point.
</p>
<p>
This is hopefully the last 1.3 development release and will be followed by
the first 1.4.0 release candidate (1.3.90) in 1-2 weeks. Which then hopefully
is followed by 1.4.0 soonish in early July.
</p>
<p>
Binaries for Android, iOS, Mac OS X and Windows will be provided separately
during the unstable 1.3 release series.
</p>

<p>
<i>"Such ingratitude.  After all the times I've saved your life."</i>
</p>
<p>
A collection of plugins you'd want to have right next to you on the
battlefield.  Shooting sharp and making no mistakes, these plugins have it
all: good looks, good code, and good licensing.  Documented and dressed up
in tests.  If you're looking for a role model to base your own plugin on,
here it is.
</p>
<p>
If you find a plot hole or a badly lip-synced line of code in them,
let us know - it is a matter of honour for us to ensure Blondie doesn't look
like he's been walking 100 miles through the desert without water.
</p>
<p>
This module contains a set of plugins that we consider to have good quality
  code, correct functionality, our preferred license (LGPL for the plugin
  code, LGPL or LGPL-compatible for the supporting library).
We believe distributors can safely ship these plugins.
People writing elements should base their code on these elements.
</p>
<p>
Other modules containing plugins are:

<dl>
<dt>gst-plugins-base</dt>
<dd>contains a basic set of well-supported plugins</dd>
<dt>gst-plugins-ugly</dt>
<dd>contains a set of well-supported plugins, but might pose problems for
    distributors</dd>
<dt>gst-plugins-bad</dt>
<dd>contains a set of less supported plugins that haven't passed the
    rigorous quality testing we expect, or are still missing documentation
    and/or unit tests</dd>
<dt>gst-libav</dt>
<dd>contains a set of codecs plugins based on libav (formerly gst-ffmpeg)</dd>
</dl>

</p>
  </intro>

<!--
  <applications>
  </applications>
-->

      <contributors>
	<person>Aleix Conchillo Flaqué</person>
	<person>Edward Hervey</person>
	<person>Guillaume Desmottes</person>
	<person>Jan Alexander Steffens (heftig)</person>
	<person>Julien Isorce</person>
	<person>Nicolas Dufresne</person>
	<person>Olivier Crête</person>
	<person>Piotr Drąg</person>
	<person>Ravi Kiran K N</person>
	<person>Sebastian Dröge</person>
	<person>Thiago Santos</person>
	<person>Tim-Philipp Müller</person>
	<person>Vincent Penquerc'h</person>
	<person>Wim Taymans</person>
  </contributors>

<!--
  <api>
    <additions>
    </additions>
    <deprecations>
    </deprecations>
  </api>
-->

  

  

  <bugs>
    <bug>
      <id>725903</id>
      <summary>flvdemux: set RESYNC buffer flag when bridging large PTS gaps</summary>
    </bug>
    <bug>
      <id>726512</id>
      <summary>some svq3/mov files stall on start</summary>
    </bug>
    <bug>
      <id>726556</id>
      <summary>POTFILES.in is out of date</summary>
    </bug>
    <bug>
      <id>728501</id>
      <summary>rtpaux/rtprtx: Unit tests are racy and take very long sometimes</summary>
    </bug>
    <bug>
      <id>729707</id>
      <summary>souphttpsrc: Add custom sticky event to contain the HTTP request and response headers</summary>
    </bug>
    <bug>
      <id>730473</id>
      <summary>rtspsrc: add support for key length parameters</summary>
    </bug>
    <bug>
      <id>730476</id>
      <summary>v4l2videodec:  stalls on large seeks</summary>
    </bug>
    <bug>
      <id>730563</id>
      <summary>Propagate DISCONT and DELTAUNIT flags through H264 and Jpeg payloaders</summary>
    </bug>
    <bug>
      <id>730698</id>
      <summary>v4lsrc: Fails using glimagesink in userptr</summary>
    </bug>
    <bug>
      <id>730722</id>
      <summary>Cannot seek in a m4a AAC audio file</summary>
    </bug>
    <bug>
      <id>731169</id>
      <summary>wavparse: Puts codec_data on raw audio caps</summary>
    </bug>
    <bug>
      <id>731475</id>
      <summary>multipartdemux: Got data flow before stream-start</summary>
    </bug>
    <bug>
      <id>722303</id>
      <summary>v4l2sink: Enable rendering of the preroll buffer</summary>
    </bug>
  </bugs>

</release>
