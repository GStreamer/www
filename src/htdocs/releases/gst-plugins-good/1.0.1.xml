<?xml version="1.0"?>
<?xml-stylesheet href="../releases.xsl" type="text/xsl"?>
<release>
  <module>gst-plugins-good</module>
  <module-fancy>GStreamer Good Plugins</module-fancy>
  <name></name>
  <version>1.0.1</version>

  <intro>

<p>
The GStreamer team is proud to announce a new release
in the 1.x stable series of the
core of the GStreamer streaming media framework.
</p>
<p>
The 1.x series is a stable series targeted at end users.
It is not API or ABI compatible with the stable 0.10.x series.
It is, however, parallel installable with the 0.10.x series and
will not affect an existing 0.10.x installation.
</p>

<p>
<i>"Such ingratitude.  After all the times I've saved your life."</i>
</p>
<p>
A collection of plugins you'd want to have right next to you on the
battlefield.  Shooting sharp and making no mistakes, these plugins have it
all: good looks, good code, and good licensing.  Documented and dressed up
in tests.  If you're looking for a role model to base your own plugin on,
here it is.
</p>
<p>
If you find a plot hole or a badly lip-synced line of code in them,
let us know - it is a matter of honour for us to ensure Blondie doesn't look
like he's been walking 100 miles through the desert without water.
</p>
<p>
This module contains a set of plugins that we consider to have good quality
  code, correct functionality, our preferred license (LGPL for the plugin
  code, LGPL or LGPL-compatible for the supporting library).
We believe distributors can safely ship these plugins.
People writing elements should base their code on these elements.
</p>
<p>
Other modules containing plugins are:

<dl>
<dt>gst-plugins-base</dt>
<dd>contains a basic set of well-supported plugins</dd>
<dt>gst-plugins-ugly</dt>
<dd>contains a set of well-supported plugins, but might pose problems for
    distributors</dd>
<dt>gst-plugins-bad</dt>
<dd>contains a set of less supported plugins that haven't passed the
    rigorous quality testing we expect, or are still missing documentation
    and/or unit tests</dd>
<dt>gst-libav</dt>
<dd>contains a set of codecs plugins based on libav (formerly gst-ffmpeg)</dd>
</dl>

</p>
  </intro>

  <features>
    <feature>Parallel installability with 0.10.x series</feature>
    <feature>interleave, deinterlave: channel handling fixes for mono audio</feature>
    <feature>videobalance now supports NV12 and NV21 as well</feature>
  </features>

  <applications>
  </applications>

    <contributors>
	<person>Andre Moreira Magalhaes (andrunko)</person>
	<person>Arnaud Vrac</person>
	<person>Dmitriy Samonenko</person>
	<person>Edward Hervey</person>
	<person>Mark Nauwelaerts</person>
	<person>Michael Smith</person>
	<person>Patricia Muscalu</person>
	<person>Rasmus Rohde</person>
	<person>Robert Swain</person>
	<person>Sebastian Dröge</person>
	<person>Tim-Philipp Müller</person>
	<person>Wim Taymans</person>
  </contributors>

<!--
  <api>
    <additions>
    </additions>
    <deprecations>
    </deprecations>
  </api>
-->

  

  <bugs>
    <bug>
      <id>683622</id>
      <summary>flvdemux: Internal flow error when demuxing speex</summary>
    </bug>
    <bug>
      <id>684972</id>
      <summary>qtdemux: cannot play mp4 file when MOOV atom is at the end of file</summary>
    </bug>
    <bug>
      <id>684977</id>
      <summary>Can't seek in AVI file in push mode</summary>
    </bug>
    <bug>
      <id>685059</id>
      <summary>avidemux: cannot play video in push mode</summary>
    </bug>
    <bug>
      <id>685213</id>
      <summary>rtph264pay: pushing unmapped data.</summary>
    </bug>
    <bug>
      <id>685512</id>
      <summary>rtpgstdepay has a memory leak</summary>
    </bug>
  </bugs>

</release>
