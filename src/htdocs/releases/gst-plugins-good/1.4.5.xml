<?xml version="1.0"?>
<?xml-stylesheet href="../releases.xsl" type="text/xsl"?>
<release>
  <module>gst-plugins-good</module>
  <module-fancy>GStreamer Good Plugins</module-fancy>
  <name></name>
  <version>1.4.5</version>

  <intro>
<p>
The GStreamer team is pleased to announce a bugfix release of the stable
1.4 release series. The 1.4 release series is adding new features on top
of the 1.2 series and is part of the API and ABI-stable 1.x release
series of the GStreamer multimedia framework that contains new features.
The 1.4.x bugfix releases only contain important bugfixes compared to 1.4.0.
</p>
<p>
Binaries for Android, iOS, Mac OS X and Windows are provided by the
GStreamer project for this release.
</p>
<p>
The 1.x series is a stable series targeted at end users. It is not API
or ABI compatible with the 0.10.x series. It can, however, be installed
in parallel with the 0.10.x series and will not affect an existing
0.10.x installation.
</p>
<p>
The stable 1.4.x release series is API and ABI compatible with 1.0.x and
any other 1.x release series in the future. Compared to 1.0.x it contains
some new features and more intrusive changes that were considered too
risky as a bugfix.
</p>

<p>
<i>"Such ingratitude.  After all the times I've saved your life."</i>
</p>
<p>
A collection of plugins you'd want to have right next to you on the
battlefield.  Shooting sharp and making no mistakes, these plugins have it
all: good looks, good code, and good licensing.  Documented and dressed up
in tests.  If you're looking for a role model to base your own plugin on,
here it is.
</p>
<p>
If you find a plot hole or a badly lip-synced line of code in them,
let us know - it is a matter of honour for us to ensure Blondie doesn't look
like he's been walking 100 miles through the desert without water.
</p>
<p>
This module contains a set of plugins that we consider to have good quality
  code, correct functionality, our preferred license (LGPL for the plugin
  code, LGPL or LGPL-compatible for the supporting library).
We believe distributors can safely ship these plugins.
People writing elements should base their code on these elements.
</p>
<p>
Other modules containing plugins are:

<dl>
<dt>gst-plugins-base</dt>
<dd>contains a basic set of well-supported plugins</dd>
<dt>gst-plugins-ugly</dt>
<dd>contains a set of well-supported plugins, but might pose problems for
    distributors</dd>
<dt>gst-plugins-bad</dt>
<dd>contains a set of less supported plugins that haven't passed the
    rigorous quality testing we expect, or are still missing documentation
    and/or unit tests</dd>
<dt>gst-libav</dt>
<dd>contains a set of codecs plugins based on libav (formerly gst-ffmpeg)</dd>
</dl>

</p>
  </intro>

<!--
  <applications>
  </applications>
-->

    <contributors>
	<person>Aleix Conchillo Flaqué</person>
	<person>Andrei Sarakeev</person>
	<person>Aurélien Zanelli</person>
	<person>Göran Jönsson</person>
	<person>Jan Alexander Steffens (heftig)</person>
	<person>Matthew Waters</person>
	<person>Nicolas Dufresne</person>
	<person>Olivier Crête</person>
	<person>Patrick Radizi</person>
	<person>Sebastian Dröge</person>
	<person>Simon Farnsworth</person>
	<person>Thibault Saunier</person>
	<person>Tim-Philipp Müller</person>
	<person>Wim Taymans</person>
  </contributors>

<!--
  <api>
    <additions>
    </additions>
    <deprecations>
    </deprecations>
  </api>
-->

  <bugs>
    <bug>
      <id>711437</id>
      <summary>apev2mux: should not put APEv2 tags at beginning of WavPack files</summary>
    </bug>
    <bug>
      <id>726194</id>
      <summary>v4l2src does not cope well when a capture card is sometimes interlaced, sometimes progressive at the same resolution</summary>
    </bug>
    <bug>
      <id>736397</id>
      <summary>flvdemux: Per-stream resyncing behavior causes A/V-desyncs</summary>
    </bug>
    <bug>
      <id>737603</id>
      <summary>v4l2bufferpool: set buffer interlace flags when field is V4L2_FIELD_INTERLACED</summary>
    </bug>
    <bug>
      <id>739476</id>
      <summary>vpx: fails to build against libvpx from git</summary>
    </bug>
    <bug>
      <id>739722</id>
      <summary>matroskamux: Thread safe register GstMatroskamuxPad</summary>
    </bug>
    <bug>
      <id>739789</id>
      <summary>v4l2allocator: fix error message if allocator is already active</summary>
    </bug>
    <bug>
      <id>739791</id>
      <summary>v4l2bufferpool: unref pool when v4l2_allocator_new() fails</summary>
    </bug>
    <bug>
      <id>739792</id>
      <summary>v4l2allocator: fix gst_v4l2_allocator_stop prototype</summary>
    </bug>
    <bug>
      <id>739996</id>
      <summary>videomixer: Drops a lot of frames, if one of the sources is live</summary>
    </bug>
    <bug>
      <id>740040</id>
      <summary>v4l2src: Fails in presence of V4L2_BUF_FLAG_ERROR</summary>
    </bug>
    <bug>
      <id>740392</id>
      <summary>rtspsrc: mikey base64 decoded key-mgmt leak</summary>
    </bug>
    <bug>
      <id>740407</id>
      <summary>qtmux limits capture to 4096x4096</summary>
    </bug>
    <bug>
      <id>740633</id>
      <summary>v4l2src: RW io-mode is broken</summary>
    </bug>
    <bug>
      <id>740636</id>
      <summary>v4l2src: framerate is not always set on driver</summary>
    </bug>
    <bug>
      <id>740671</id>
      <summary>aspectratiocrop: crop needs to be reset when video size changes</summary>
    </bug>
    <bug>
      <id>740905</id>
      <summary>v4l2: still has 1 include to linux/videodev.h</summary>
    </bug>
    <bug>
      <id>741271</id>
      <summary>rtph264pay: Buffer leak in H.264 payloader when using SPS/PPS</summary>
    </bug>
    <bug>
      <id>741381</id>
      <summary>rtph264pay: Race condition may cause crash when going from PAUSED- &gt; READY</summary>
    </bug>
    <bug>
      <id>741407</id>
      <summary>deinterlace: in query_caps return only supported formats if filter is interlaced</summary>
    </bug>
    <bug>
      <id>737579</id>
      <summary>v4l2object: set colorspace for output devices</summary>
    </bug>
    <bug>
      <id>739754</id>
      <summary>v4l2bufferpool: Should validate that all memories are writeable before queueing back</summary>
    </bug>
  </bugs>

</release>
