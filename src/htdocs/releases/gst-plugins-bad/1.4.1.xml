<?xml version="1.0"?>
<?xml-stylesheet href="../releases.xsl" type="text/xsl"?>
<release>
  <module>gst-plugins-bad</module>
  <module-fancy>GStreamer Bad Plugins</module-fancy>
  <name></name>
  <version>1.4.1</version>

  <intro>

<p>
The GStreamer team is pleased to announce a bugfix release of the stable
1.4 release series. The 1.4 release series is adding new features on top
of the 1.2 series and is part of the API and ABI-stable 1.x release
series of the GStreamer multimedia framework that contains new features.
The 1.4.x bugfix releases only contain important bugfixes compared to 1.4.0.
</p>
<p>
Binaries for Android, iOS, Mac OS X and Windows are provided by the
GStreamer project for this release.
</p>
<p>
The 1.x series is a stable series targeted at end users. It is not API
or ABI compatible with the 0.10.x series. It can, however, be installed
in parallel with the 0.10.x series and will not affect an existing
0.10.x installation.
</p>
<p>
The stable 1.4.x release series is API and ABI compatible with 1.0.x and
any other 1.x release series in the future. Compared to 1.0.x it contains
some new features and more intrusive changes that were considered too
risky as a bugfix.
</p>

<p>
<i>"That an accusation?"</i>
</p>
<p>
No perfectly groomed moustache or any amount of fine clothing is going to
cover up the truth - these plugins are Bad with a capital B.
They look fine on the outside, and might even appear to get the job done, but
at the end of the day they're a black sheep. Without a golden-haired angel
to watch over them, they'll probably land in an unmarked grave at the final
showdown.
</p>
<p>
Don't bug us about their quality - exercise your Free Software rights,
patch up the offender and send us the patch on the fastest steed you can
steal from the Confederates. Because you see, in this world, there's two
kinds of people, my friend: those with loaded guns and those who dig.
You dig.
</p>
<p>
This module contains a set of plugins that aren't up to par compared to the
rest.  They might be close to being good quality, but they're missing something
- be it a good code review, some documentation, a set of tests, a real live
maintainer, or some actual wide use.  If the blanks are filled in they might be
upgraded to become part of either gst-plugins-good or gst-plugins-ugly,
depending on the other factors.
If the plugins break, you can't complain - instead, you can fix the
problem and send us a patch, or bribe someone into fixing them for you.
New contributors can start here for things to work on.
</p>
<p>
Other modules containing plugins are:

<dl>
<dt>gst-plugins-base</dt>
<dd>contains a basic set of well-supported plugins</dd>
<dt>gst-plugins-good</dt>
<dd>contains a set of well-supported plugins under our preferred license</dd>
<dt>gst-plugins-ugly</dt>
<dd>contains a set of well-supported plugins, but might pose problems for
    distributors</dd>
<dt>gst-libav</dt>
<dd>contains a set of codecs plugins based on libav (formerly gst-ffmpeg)</dd>
</dl>

</p>
  </intro>

<!--
  <applications>
  </applications>
-->

      <contributors>
	<person>Aurélien Zanelli</person>
	<person>David Rothlisberger</person>
	<person>George Kiagiadakis</person>
	<person>Mathieu Duponchelle</person>
	<person>Matthew Waters</person>
	<person>Nicola Murino</person>
	<person>Sebastian Dröge</person>
	<person>Sebastian Rasmussen</person>
	<person>Thiago Santos</person>
	<person>Vineeth T M</person>
	<person>Wang Xin-yu (王昕宇)</person>
	<person>Руслан Ижбулатов</person>
  </contributors>

<!--
  <api>
    <additions>
    </additions>
    <deprecations>
    </deprecations>
  </api>
-->

  

  

  <bugs>
    <bug>
      <id>678485</id>
      <summary>templatematch: element improvements</summary>
    </bug>
    <bug>
      <id>725871</id>
      <summary>decklinksink: no output, only black</summary>
    </bug>
    <bug>
      <id>730509</id>
      <summary>facedetect: fix update on change</summary>
    </bug>
    <bug>
      <id>731824</id>
      <summary>hlsdemux pause after first filesegment (apple test files)</summary>
    </bug>
    <bug>
      <id>733245</id>
      <summary>gl: Document GST_GL_PLATFORM, GST_GL_API and GST_GL_WINDOW somewhere</summary>
    </bug>
    <bug>
      <id>733426</id>
      <summary>gl/sdl example fails to build (missing include directory?)</summary>
    </bug>
    <bug>
      <id>733487</id>
      <summary>openjpeg: Win32-compatible OpenJPEG-2.0 detection</summary>
    </bug>
    <bug>
      <id>733490</id>
      <summary>tsdemux: H264 seeking broken in push mode</summary>
    </bug>
    <bug>
      <id>733545</id>
      <summary>GL element leaks FBO when caps changed dynamically</summary>
    </bug>
    <bug>
      <id>733726</id>
      <summary>glimagesink: Flashes white sometimes (unpausing, seeking, window scaling)</summary>
    </bug>
    <bug>
      <id>733837</id>
      <summary>hlsdemux: doesn't stop buffering more segments after overrun</summary>
    </bug>
    <bug>
      <id>734014</id>
      <summary>dashdemux: stream downloader try to download next segments after pipeline interupt</summary>
    </bug>
    <bug>
      <id>734015</id>
      <summary>tsdemux: bad timestamping</summary>
    </bug>
    <bug>
      <id>734269</id>
      <summary>GLUpload didn't update texture properly</summary>
    </bug>
    <bug>
      <id>734394</id>
      <summary>tsdemux: Can not change program except destroy pipeline</summary>
    </bug>
    <bug>
      <id>734517</id>
      <summary>opusenc: Unref pad template caps after usage</summary>
    </bug>
    <bug>
      <id>734519</id>
      <summary>ladspa: Unref pad template caps after usage</summary>
    </bug>
    <bug>
      <id>734520</id>
      <summary>openal: Unref pad template caps after usage</summary>
    </bug>
    <bug>
      <id>734521</id>
      <summary>sbcenc: Unref output caps in error cases</summary>
    </bug>
    <bug>
      <id>734522</id>
      <summary>videoaggregator: Unref allowed caps after usage</summary>
    </bug>
    <bug>
      <id>734524</id>
      <summary>wrappercamerabinsrc: Unref elements after usage</summary>
    </bug>
    <bug>
      <id>734528</id>
      <summary>dvbsuboverlay: Avoid leaking copy of caps object</summary>
    </bug>
    <bug>
      <id>734531</id>
      <summary>interlace: Unref pad template caps after usage</summary>
    </bug>
    <bug>
      <id>734533</id>
      <summary>amcvideoenc: Avoid leaking copy of caps object</summary>
    </bug>
    <bug>
      <id>734534</id>
      <summary>vtenc: Avoid leaking caps object and its copy</summary>
    </bug>
    <bug>
      <id>734536</id>
      <summary>directsoundsrc: Avoid leaking copy of caps object</summary>
    </bug>
    <bug>
      <id>734537</id>
      <summary>pvrvideosink: Avoid leaking bufferpool configuration</summary>
    </bug>
    <bug>
      <id>734539</id>
      <summary>element-maker: Avoid leaking copy of caps object</summary>
    </bug>
    <bug>
      <id>734544</id>
      <summary>gstgsmenc: Unref caps object after usage</summary>
    </bug>
    <bug>
      <id>734763</id>
      <summary>scenechange: fix crash on startup</summary>
    </bug>
    <bug>
      <id>734830</id>
      <summary>GstGLMixer gl resource race condition</summary>
    </bug>
    <bug>
      <id>735078</id>
      <summary>gst_gl_handle_set_context may unref a NULL GstGLDisplay</summary>
    </bug>
  </bugs>
</release>
