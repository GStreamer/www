<?xml version="1.0"?>
<!DOCTYPE xml
[
  <!ENTITY % site-entities SYSTEM "../../entities.site">
    %site-entities;
    ]>

<?xml-stylesheet href="../../page.xsl" type="text/xsl"?>
<page>
  <title>GStreamer Conference 2013 Program </title>

<body lang="en-US" dir="LTR">

<h1>Speakers bio and abstracts - GStreamer Conference 2013</h1>
<h2>Edinburgh, Scotland, UK, 22-23 October 2013</h2>
<p><a href="http://gstreamer.freedesktop.org/conference">Back to conference main page</a></p>
<p><a href="gstreamer-conference-timetable.html">Back to conference timetable</a></p>
<table width="100%" border="1" bordercolor="#C0C0C0" cellpadding="4" cellspacing="2">

	<tr valign="top" bgcolor="#E8E8FF"><td>
	<a name="muller-nextlevel" id="muller-nextlevel"></a>
	<p><b>
Keynote - Taking GStreamer to the Next Level, Tim-Philipp Müller
    </b></p>
	<p>
BIO: FIXME <!-- (also check company affiliation) -->
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
ABSTRACT: FIXME
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="rothlisberger-stb-testing" id="rothlisberger-stb-testing"></a>
	<p><b>
Automated Set-top Box Testing with GStreamer, David Röthlisberger, YouView
    </b></p>
	<p>
David Röthlisberger is the creator of stb-tester, and heads test automation at YouView.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
We'll see how easy it is to develop a video-capturing image-recognition
system using GStreamer, by building one in 3 minutes!
    </p>
    <p>
A leading example of such a system is <a href="http://stb-tester.com/">stb-tester</a>,
an open-source tool developed at YouView to automate the user interface
testing of our set-top boxes. We'll see stb-tester in action, and hear
about the flexibility offered by its GStreamer underpinnings.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="schleef-gss" id="schleef-gss"></a>
	<p><b>
Latest GStreamer Streaming Server features: Video on Demand, Smooth Streaming, and DRM, David Schleef, Rdio
    </b></p>
	<p>
BIO: FIXME <!-- (also check desired company affiliation) -->
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
ABSTRACT: FIXME
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="droge-hw-integration" id="droge-hw-integration"></a>
	<p><b>
New GStreamer API for hardware integration, Sebastian Dröge
    </b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
Topics covered are the GstCapsFeatures, the ALLOCATION query,
GstMemory/GstAllocator, GstBufferPool, GstMeta and GstContext
and how this all works together to automatically make use of
hardware acceleration features in playback pipelines and other
scenarios.
<!-- FIXME: add some APIs covered, e.g. vaapi/vdpau/soc-api etc. -->
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="waters-opengl" id="waters-opengl"></a>
	<p><b>
GStreamer and OpenGL plugins in 1.0, Matthew Waters
    </b></p>
	<p>
Matthew Waters has only just started his hopefully long and rewarding
FOSS career after using Linux for the past couple of years.  When he
isn't hacking on gst-plugins-gl, he is attending University and playing
around with waveforms.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
OpenGL is a powerful API usually accompanied by powerful hardware that
currently goes mostly unused by GStreamer.  Equipped with GLSL, one can
envisage complex (or simple) filters that transform the typical video
into a psychedelic light show.  This talk will provide for the current
state of gst-plugins-gl and a look into the future of GStreamer with OpenGL.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="taymans-rtsp" id="taymans-rtsp"></a>
	<p><b>
Latest GStreamer RTSP Server features, Wim Taymans, Collabora
    </b></p>
	<p>
Wim Taymans has a computer science degree from the Katholieke Universiteit
in Leuven, Belgium and decades of software development experience. He
co-founded the GStreamer multimedia framework in 1999 and is the person
behind much of the current design. Wim has a long history in the development
of multimedia software, starting with computer game development on the
Commodore 64. Wim Taymans is working on assisting Collabora customers with
the design and use of  GStreamer as well as general research and development.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
This talk presents an RTSP server built on top of GStreamer and its various
RTP elements and libraries. We will cover the design of the server and
how it integrates with GStreamer. We will also talk about some of the new
features such as the security infrastructure and multicast support.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="morales-android-ios" id="morales-android-ios"></a>
	<p><b>
GStreamer for Mobile Platforms: Android and iOS, Andoni Morales, Fluendo
    </b></p>
	<p>
Andoni Morales is a software engineer with experience in multimedia middleware,
cross-platform applications and build systems. Andoni holds a master degree in
Telecommunications Engineering and he is a multimedia engineer at Fluendo,
working in the design and development of the company’s multimedia solutions.
On his spare time, he works in LongoMatch, a performance video analysis tool
for sports powered by GStreamer.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
Mobile platforms such as Android and iOS are growing very fast and GStreamer
offers an excellent alternative to the native API's to develop complex
multimedia applications. The recent work on the GStreamer SDK to port the
missing bits to these platforms, combined with cerbero's build system,
provides all the tools for developers to use it as their multimedia framework
and create apps ready to be deployed to the Android Market and App Store.
    </p>
    <p>
This talk will cover the new system plugins for these platforms and describe
the build process used to compile GStreamer and its dependencies. We will also
describe the integration with the native build systems and how GStreamer is
bundled in the application. Finally we will show an example on how to build a
simple media player for Android with Eclipse and for iOS with XCode.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="kim-alt-playback" id="kim-alt-playback"></a>
	<p><b>
Alternative playback solutions for Hardware Manufacturers, Jeongseok Kim, LG Electronics
    </b></p>
	<p>
Jeongseok Kim has worked for over 10 years as an embedded system software
developer. At LG Electronics he's a senior research engineer and also the
leader of GStreamer core team for WebOS.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
LGE is developing a mediaframework for WebOS based on Gstreamer. Although
GStreamer provides very good architecture, LGE still has problems to adapt
for restricted environments  such as limitation of hardware, and
product-specified requirements so that I and my team decided to design an
alternative playback solutions. In this talk, I'll share a short story and
our approach to make  solutions for unusual requirements. This talk would be
helpful for developers who are trying to make their own products with playbin.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="picard-stb-player" id="picard-stb-player"></a>
	<p><b>
GStreamer-based Media Player for SetTopBox, Romain Picard, SoftAtHome
    </b></p>
	<p>
Romain Picard is software architect at SoftAtHome, a software editor based
in France and Belgium. He has been working for more than 10 years on digital
tv. He was involved in the design and development of media components used
in many SetTopBoxes : dvb player, recorder and streamer, multimedia player.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
Good quality multimedia playback is now a mandatory feature in SetTopBox
devices. Providing the same user experience on multiple settopbox and chipset
can be challenging since the hardware and software/driver specifications are
different for each device. Moreover more container/codec combinations must be
supported each year. We present a multimedia player design allowing progressive
enhancement and easy board customization with minimal code changes, leveraging
the GStreamer framework modularity.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="moutte-flump" id="moutte-flump"></a>
	<p><b>
FluMediaPlayer: Growing our user base through high level media player API, Julien Moutte, Fluendo
    </b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
ABSTRACT: FIXME
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="calvar-webkit" id="calvar-webkit"></a>
	<p><b>
WebKit and GStreamer, Xabier Rodríguez Calvar, Igalia
    </b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
ABSTRACT: FIXME
This talk covers WebKit architecture, WebKit ports, which  ports are using
GStreamer and which versio (0.10 vs 1.0), WebKit Multimedia and GStreamer,
and WebKit Multimedia in WebKitGtk+.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="quessy-toonloop" id="quessy-toonloop"></a>
	<p><b>
Application Showcase: Toonloop, the Live Stop Motion Editor, Alexandre Quessy, Collabora
    </b></p>
	<p>
Alexandre Quessy is a Montreal-based artist and software developer. He
is interested in sampling audio, video and data. He is much involved in
creating and teaching free software for arts. His projects went to
Canada, USA, Norway, France, Mexico, Taiwan and Belgium. He is the main
author of the Toonloop live animation software. Quessy studied
communication and music. He is a software engineer at Collabora, and a
member of the artist-run centre Perte de Signal.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
Toonloop is a free software for live stop-motion animation. It allows to
create frame by frame animation, pixilation and other animation
techniques. Developed by Alexandre Quessy since 2008, the software
recalls the experiments of Norman McLaren and Pierre Hébert and has the
particularity to show the result all the while users are creating new
images. By giving an instant feedback to its users, Toonloop encourages
video contents creation. The whole process can be fun to watch, and it
is suitable for live performing arts.
	</p>
	<p>
With Toonloop, creators can create stop motion animations in a wink. The
images of the resulting clips are displayed in a never ending loop. Each
image is added one by one. Toonloop can be useful for different
purposes, such as teaching new media technique and theory, art-therapy,
VJing, rapid prototyping, and more.
	</p>
	<p>
Toonloop as been written in the C++ language using GStreamer for its
video pipeline. It is interoperable via MIDI and OpenSoundControl, and
supports some special effects or playback modes. Toonloop is a free
software released under the terms of the GPL.
	</p>
	<p>
In this presentation, the creator of Toonloop will explain the project
and demonstrate it in a short live performance. The presentation should
last around 30 minutes, or longer if desired.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="frisch-dreambox" id="frisch-dreambox"></a>
	<p><b>
Case Study: GStreamer on the Dreambox, Andreas Frisch, Dream Property
    </b></p>
	<p>
Andreas aka "Fraxinas" in the FOSS world, graduated from the
University of Applied Sciences in Aschaffenburg with a degree in
electrical engineering and information technology. Since writing his
thesis paper about a streaming video server for set top boxes, he has
been working for Dream Multimedia, the company which released the
first Linux-based STB called "Dreambox".
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
The Dreambox is a prototypical example of a multimedia embedded linux
device and has been making use of Gstreamer since 2006. In this case
study, I will shortly introduce our line of consumer electronics
products and then focus on how it relies on Gstreamer: what were the
pitfalls and how did we (fail to) master them? The talk will explain
how we solved audio and video playback with SOC hardware decoders
using the LinuxTV API and custom Gstreamer sink elements. I will
expound on how our Gstreamer 1.0 port is coming along and what plans
the future holds.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="vermeir-hevc" id="vermeir-hevc"></a>
	<p><b>
Next Generation Video Coding with HEVC: Facts and Figures, Thijs Vermeir, Barco
    </b></p>
	<p>
Thijs Vermeir has been contributing to the GStreamer project since 2006. After
working at Fluendo, he is now research engineer for Barco, where he is
doing research in video processing including video compression and network
streaming.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
HEVC (High Efficiency Video Coding) is developed as the successor of the
H.264/AVC video coding standard. The goal of the HEVC standardization process
was to develop new algorithms to reduce the bandwidth by 50% for equivalent
perceptual quality and to support higher resolutions. A first version of the
standard was published in January 2013. But next to the technical details,
market adoption is even more important for a codec’s success. There are a lot
of questions that need answering: Why is the performance of H.264/AVC not good
enough? Do we really need better compression? Is the market ready for HEVC?
Are we able to notice the difference between HD and 4k (or 8k)? Is there
silicon available? …
    </p>
    <p>
The first part of the talk will provide a high level overview of HEVC, with
respect to the improved coding tools as well as performance. The second part
of the talk will provide insight on how this new codec can be adopted in the
market and what the burdens are on its way to success.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="sauer-mediainfo" id="sauer-mediainfo"></a>
	<p><b>
Application Showcase: gst-media-info, Stefan Sauer
    </b></p>
	<p>
Stefan is a software engineer working for Google on build infrastructure tools.
In the past he was working for Nokia on the multimedia stack used on their
maemo/meego internet tablets and phones. In his free time his is contributing
to GStreamer, other GNOME projects (e.g. gtk-doc) and working on his music
editor buzztrax. He has a PhD in Human Computer Interaction from the Technical
University of Dresden/Germany. Stefan now lives in Munich/Germany with his
wife and his two kids.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
GStreamer has the discoverer feature to quickly collect metadata from media
files. The included command-line tool is not convenient for going through a
larger set of files. In this demo I show gst-mediainfo as an alternative UI.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="duponchelle-ges" id="duponchelle-ges"></a>
	<p><b>
GES - The Open Source Swiss Army Knife of Multimedia Editing, Mathieu Duponchelle
    </b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
The purpose of this talk is to first present the current state of
Gstreamer Editing Services, and in a second time analyse how our design, and
the design of the underlying framework, will allow us to provide solutions
to the various challenges the multimedia edition world will throw at us.
An offline, featureful video editor named Pitivi makes extensive use of GES
and serves partly as a showcase, but we will show how GES has the potential
to be used in much more use cases than this particular one: online editing,
collaborative editing, live broadcasting, and how Pitivi could be extended
to match specific use cases.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="emont-cairosink" id="emont-cairosink"></a>
	<p><b>
Cairosink and GPU Buffer Sharing, Guillaume Emont, Igalia
    </b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
GStreamer 1.0 introduced a new architecture that makes memory management
easier. In particular, handling non-system memory and sharing it between
elements is made easier.
    </p>
    <p>
While building a video sink for cairogles, I wanted to explore the possibility
of sharing GPU memory (in my case, GL or GLES textures) between elements of a
pipeline. In this talk, I will explain how I made the various parts fit
together, and discuss the challenges that I have met and how I have worked on
them.
	</p>
	</i>
	</td></tr>

	<tr valign="top" bgcolor="#E8E8FF"><td>
	<a name="taymans-pitfalls" id="taymans-pitfalls"></a>
	<p><b>Keynote - Pitfalls and Best Practices for Using GStreamer to Build Products, Wim Taymans, Collabora</b></p>
	<p>
Wim Taymans has a computer science degree from the Katholieke Universiteit
in Leuven, Belgium and decades of software development experience. He
co-founded the GStreamer multimedia framework in 1999 and is the person
behind much of the current design. Wim has a long history in the development
of multimedia software, starting with computer game development on the
Commodore 64. Wim Taymans is working on assisting Collabora customers with
the design and use of  GStreamer as well as general research and development.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
This Keynote compiles a set of guidelines and best practices for integrating
GStreamer into your products. It is meant to be a series of 'lessons
learnt' from a decade of GStreamer consulting which can hopefully help you
avoid some of the common pitfalls. We will talk about integration with
existing hardware and software solutions as well as dealing with the community
to make the most out of GStreamer and its ecosystem.
    </p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="olbrich-embedded" id="olbrich-embedded"></a>
	<p><b>
Multimedia on Embedded Linux - Pushing GStreamer to its Limits, Michael Olbrich, PenguTronix
</b></p>
	<p>
Michael works for Pengutronix on embedded Linux topics and has been using
GStreamer here for several years. He recently started to contribute to
GStreamer, mostly to the video4linux plugin and related topics.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
Modern ARM SoCs have a number of hardware multimedia units. GStreamer's
modular design makes it the ideal candidate to integrate these units into a
multimedia application.
    </p>
    <p>
This talk is a chronicle of GStreamer application development on Freescale
i.MX53 SoCs. It shows the problems faced when working with embedded systems
in general and the challenges encountered while integrating hardware
acceleration units like the scaler/colorspace converter or the video
encoder/decoder.
    </p>
    <p>
I intend to show what can be done when putting it all together, because
decoding and displaying a video or encoding and streaming from a camera
barely scratches the surface of what can be done with GStreamer on embedded
systems.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="hervey-time" id="hervey-time"></a>
	<p><b>
Time and Synchronization for Dummies (yes, you!), Edward Hervey, Collabora
</b></p>
	<p>
Edward Hervey has been contributing since 2003 to the GStreamer
framework. Edward is interested in all fields of applications and usage of
GStreamer, which he applies as the Multimedia Domains Lead at Collabora
where he has worked for the past 6 years.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
An overview of all time usages in GStreamer, how it all fits
together, and what can be improved. If you are unsure about time and
synchronization in GStreamer, this is your chance to fix that.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="leeman-drive-towards-software" id="leeman-drive-towards-software"></a>
	<p><b>
Drive Towards Software in a Traditionally Hardware-centric Company and how GStreamer Plays an Essential Role in This, Marc Leeman, Barco
</b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
ABSTRACT: FIXME
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="schmidt-gst-enabled-home" id="schmidt-gst-enabled-home"></a>
	<p><b>
My GStreamer-Enabled Home, Jan Schmidt
</b></p>
	<p>
Jan Schmidt has been a GStreamer developer and maintainer since 2002. He
is responsible for GStreamer's DVD support, and primary author of the
Aurena home-area media player. He lives in Albury, Australia and keeps
sheep, chickens, ducks and more fruit trees than is sensible.
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
Officially, this is a talk about using GStreamer around the house.
	</p>
	<p>
Really, it's a talk about being lazy, chickens, sheds and tiny humans.
	</p>
	<p>
It might also touch on network media, streaming and synchronisation.
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="graff-testing" id="graff-testing"></a>
	<p><b>
Pexip and Our Testing Approach to GStreamer, Havard Graff, Pepix
</b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
ABSTRACT: FIXME
	</p>
	</i>
	</td></tr>

	<tr valign="top"><td>
	<a name="raghavan-pulseaudio" id="raghavan-pulseaudio"></a>
	<p><b>
Return of the PulseAudio Update, Arun Rhagavan, Collabora
</b></p>
	<p>
BIO: FIXME
	</p>
	<i>
	<p><b>Talk Abstract</b></p>
	<p>
When we last left or heroes, it was autumn in Prague, 2011. A 1.0 release has
just been made, the citizens of Linuxia were rejoicing and world domination was
close at hand.
	</p>
	<p>
In this next chapter of our heroes' adventures we shall see what fate befalls
them, as they navigate the swamps of Android, fight the beasts of ARM, and
finally vanquish the Use Case Manager. Will they finally get a stable release
cycle? Will they stop breaking your audio? Join us, to find out more!
	</p>
	</i>
	</td></tr>

</table>

</body>
</page>
