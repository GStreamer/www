#!/usr/bin/env python
# -*- Mode: Python -*-
# vi:si:et:sw=4:sts=4:ts=4

"""
Extract contributors since the previous release from a ChangeLog
and write into a release.xml file
"""

# FIXME: automatically update the release.xml file

import sys
import os
import re
import codecs

def main():
    if len(sys.argv) < 3:
        sys.stderr.write("Please specify a ChangeLog and release.xml file")
        sys.exit(1)
    changelog = sys.argv[1]
    release = sys.argv[2]

    if not os.path.exists(changelog):
        sys.stderr.write("%s does not exist.\n" % changelog)
        sys.exit(1)

    names = []
    
    lines = codecs.open(changelog, "r", encoding='utf-8').readlines()
    relmatcher = re.compile('^=== release .* ===$')
    if relmatcher.match(lines[0]):
        del lines[0]

    datedmatcher = re.compile('^\d*-\d*-\d*\s*(.*)\s*<.*>$')
    bymatcher = re.compile(' by: ([^<]*)\s*.*$')
    for line in lines:
        if relmatcher.match(line):
            break
        for matcher in [datedmatcher, bymatcher]:
            match = matcher.search(line)
            if match:
                name = match.expand("\\1").rstrip()
                if not name in names:
                    names.append(name)
    names.sort()
       
    # output
    doc = codecs.open(release, "r", encoding='utf-8').read()
    list = []
    for name in names:
        list.append("\t<person>%s</person>" % name)
    contr = "\n".join(list) + "\n"
    matcher = re.compile('(.*)<contributors>.*</contributors>(.*)',
        re.DOTALL)
    match = matcher.search(doc)
    pre = match.expand('\\1') + "  <contributors>\n"
    post = "  </contributors>\n" + match.expand('\\2')

    target = release + ".bak"
    os.rename(release, target)
    handle = codecs.open(release, "w", encoding='utf-8')
    handle.write(pre + contr + post)
    handle.close()
main()
